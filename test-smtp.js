// test-smtp.js - Script ki·ªÉm tra SMTP connection
// Script n√†y ƒë·ªçc c·∫•u h√¨nh t·ª´ file .env

require('dotenv').config();
const nodemailer = require('nodemailer');

console.log('üîç Testing SMTP Connection...\n');

// C·∫•u h√¨nh SMTP - ƒê·ªçc t·ª´ file .env
const config = {
  host: process.env.SMTP_HOST || 'smtp.gmail.com',
  port: parseInt(process.env.SMTP_PORT) || 587,
  secure: process.env.SMTP_SECURE === 'true',
  auth: {
    user: process.env.SMTP_USER,
    pass: process.env.SMTP_PASS
  }
};

console.log('üìß SMTP Configuration:');
console.log('   Host:', config.host);
console.log('   Port:', config.port);
console.log('   User:', config.auth.user);
console.log('   Pass:', config.auth.pass.replace(/./g, '*'), '(hidden)');
console.log('');

// T·∫°o transporter
const transporter = nodemailer.createTransport(config);

// Test connection
transporter.verify((error, success) => {
  if (error) {
    console.log('‚ùå SMTP Connection FAILED!');
    console.log('');
    console.log('Error:', error.message);
    console.log('');
    console.log('Troubleshooting:');
    console.log('  1. Check SMTP_USER - ph·∫£i l√† email ƒë·∫ßy ƒë·ªß (c√≥ @gmail.com)');
    console.log('  2. Check SMTP_PASS - ph·∫£i l√† App Password 16 k√Ω t·ª±');
    console.log('  3. ƒê·∫£m b·∫£o ƒë√£ b·∫≠t 2-Step Verification');
    console.log('  4. T·∫°o App Password m·ªõi t·∫°i: https://myaccount.google.com/apppasswords');
    console.log('');
  } else {
    console.log('‚úÖ SMTP Connection SUCCESSFUL!');
    console.log('');
    console.log('üéâ Server is ready to send emails!');
    console.log('');
    console.log('Next steps:');
    console.log('  1. Copy SMTP_USER v√† SMTP_PASS v√†o file .env');
    console.log('  2. Restart server: npm run dev');
    console.log('  3. Test ƒëƒÉng k√Ω t√†i kho·∫£n');
    console.log('');
  }
});

